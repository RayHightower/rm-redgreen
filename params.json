{"name":"rm-redgreen","body":"Description\r\n-----\r\n\r\nRedGreen clone (colorful rake spec) for RubyMotion's Bacon with a couple styles. Includes Autotest functionality, an applescript to make your iOS sim headless, and a ported terminal color library you may use with NSLog.\r\n\r\nFeatures\r\n-----\r\n\r\n* Autotest functionality with Guard\r\n* A ported ansiterm.rb for terminal colors\r\n* 3 styles of testing output (00-redgreen.rb)\r\n* nearly-headless iOS Simulator via an AppleScript in the Guardfile\r\n\r\nInstructions\r\n-----\r\n\r\n- Copy 00-redgreen.rb into spec/\r\n- Load rm-ansiterm.rb in your app/\r\n- Run `rake spec`\r\n\r\nFor using Guard I have prepared a Gemfile & Guardfile\r\n- Add the Gemfile & Guardfile to your project\r\n- Run `bundle install`\r\n- Run `guard`\r\n- Red, green, refactor!\r\n\r\nOutput Styles\r\n-----\r\n\r\nThere are currently 3 styles, settable at the top of 00-redgreen.rb\r\n\r\n* `:focused` only shows one backtrace/error at a time, and uses the `.`, `?`, and `F` for all the rest, keeping you \"focused\" on greening.\r\n* `:full` shows everything, this is the first style I created.\r\n* `:original` just reverts back to the standard RubyMotion style (no colors)\r\n\r\nDefault style is `:focused`\r\n\r\nScreenshots\r\n-----\r\n\r\n### Focused (default)\r\n![Focused](http://i.imgur.com/PxMKt.jpg)\r\n\r\n### Full\r\n![Full](http://i.imgur.com/OM2Ic.jpg)\r\n\r\n### Original (comes with RubyMotion)\r\n![Original](http://i.imgur.com/rhsPE.png)\r\n\r\nExtras\r\n-----\r\n\r\nIncludes a ported ansiterm.rb, a general terminal coloring library.\r\n\r\n```ruby\r\n# string.rb\r\nclass String\r\n  def method_missing(sym, *args, &block)\r\n    Term::ANSIColor.send(sym) { self } rescue super\r\n  end\r\nend\r\n```\r\n\r\n```ruby\r\n# kernel.rb\r\nclass Kernel\r\n  def p(arg, style=nil)\r\n    if Term.nil?\r\n      NSLog arg\r\n    else\r\n      NSLog(style ? arg.send(style) : arg)\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWith code like the above, you can do colorful NSLog output in this way:\r\n\r\n```ruby\r\np \"I like Cyan\", :cyan\r\np \"Sometimes this is hard to read...\", :blue\r\np [{:oh=>\"this\"}, \"is\", :convenient].inspect, :yellow\r\n```\r\n\r\n","tagline":"Slick lightweight RubyMotion test tools with integrated automation for all your BDD needs. Programmer tested, QA engineer approved. ","google":"UA-20448261-1","note":"Don't delete this file! It's used internally to help with page regeneration."}